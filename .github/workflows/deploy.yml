name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file from GitHub Secrets
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

    - name: List files in the current directory
      run: ls -al

    - name: Check if Docker Compose is installed
      run: |
        if ! command -v docker-compose &> /dev/null; then
          echo "Docker Compose not found, installing..."
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        else
          echo "Docker Compose is already installed"
        fi

    - name: Add EC2 to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
        echo "$SSH_PRIVATE_KEY" > ~/ec2-svapikey.pem
        chmod 600 ~/ec2-svapikey.pem
        scp -i ~/ec2-svapikey.pem docker-compose.yml .env Dockerfile ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/pizza-store-backend
        ssh -i ~/ec2-svapikey.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Move to project directory
          cd /home/ubuntu/pizza-store-backend

          # Pull latest code
          if [ -d ".git" ]; then
            git reset --hard
            git pull origin main
          else
            echo "Git not initialized in this directory. Skipping pull step."
          fi

          # Build and run Docker container
          docker-compose down
          docker-compose up -d --build
        EOF
